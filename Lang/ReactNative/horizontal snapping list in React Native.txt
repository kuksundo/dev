import React from 'react';
import {
  Dimensions,
  FlatList,
  SafeAreaView,
  StyleSheet,
  Text,
  View,
} from 'react-native';

const data = [
  {id:1, name: 'Some important info 1'},
  {id:2, name: 'Some important info 2'},
  {id:3, name: 'Some important info 3'},
  {id:4, name: 'Some important info 4'},
  {id:5, name: 'Some important info 5'}
]


const renderItem = ({item}) => {
  return (
      <View style={styles.container}>
        <Text style={styles.title}>{item.name}</Text>
      </View>
  );
};

export const App = () => {
  return (
    <SafeAreaView>
      <FlatList
  data={data}
  renderItem={renderItem}
  horizontal
  snapToAlignment={'center'}
  decelerationRate={'fast'}
  snapToInterval={Dimensions.get('window').width}
  showsHorizontalScrollIndicator={false}      />
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    height: Dimensions.get('window').height,
    width: Dimensions.get('window').width,
    borderColor: '#000',
    borderWidth: 2,
    justifyContent: 'center',
    alignItems: 'center',
    alignSelf: "center"
  },
  title: {
    fontSize: 20,
  },
});
How make it snap to center every item?
To make it clear I should say, that it¡¯s just React Native props. Just a common props, nothing special, we should add snapToInterval snapToAlignment and decelerationRate props, how it should look in code:

<FlatList
  data={data}
  renderItem={renderItem}
  horizontal
  snapToAlignment={'center'}
  decelerationRate={'fast'}
  snapToInterval={Dimensions.get('window').width}
  showsHorizontalScrollIndicator={false}
/>
Why snapToInterval is needed here?
As long, as snapToAlignment the prop is IOS only, but the application should support both platforms, and that¡¯s the reason why snapToInterval is necessary for code.

And there is an example of how it looks in application:

snapping FlatList
Conclusion
That¡¯s my first article, and I tried to make it understandable and useful for everyone, I hope this article will be useful for someone, who faced the same problem.

